#requirement
sdk
Docker
maven
kubectl
minikube

#Structure
spring-hello/
├── Dockerfile
├── pom.xml
└── src/
    └── main/
        └── java/
            └── com/
                └── example/
                    └── demo/
                        └── HelloApplication.java
#codeapplication
package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RestController;

@SpringBootApplication
@RestController
public class DemoApplication {

    @GetMapping("/")
    public String hello() {
        return "Hello World!";
    }

    public static void main(String[] args) {
        SpringApplication.run(DemoApplication.class, args);
    }
}

#fichierxml
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
         http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <groupId>com.example</groupId>
    <artifactId>demo</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.4</version>
        <relativePath/>
    </parent>

    <properties>
        <java.version>17</java.version>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>

#Dockerfile
FROM eclipse-temurin:17-jdk-jammy

WORKDIR /app

COPY target/demo-0.0.1-SNAPSHOT.jar app.jar

EXPOSE 8080

ENTRYPOINT ["java","-jar","app.jar"]

#commandbuild
sudo apt update
sudo apt install openjdk-17-jdk -y


mvn clean package
docker build -t spring-hello .
docker run -d -p 8080:8080 --name spring-hello-container spring-hello
http://localhost:8080

#WSL curl -s -o /dev/null -w "%{http_code}" http://localhost:8080/

#PS curl http://localhost:8080/



curl http://192.168.49.2:31601
minikube service kibana

kubectl passwd uwNSTZBYLBuWiP4E24CB

token 
kubectl exec -it elasticsearch-0 -- bin/elasticsearch-create-enrollment-token -s kibana
eyJ2ZXIiOiI4LjkuMCIsImFkciI6WyIxMC4yNDQuMC4xNjo5MjAwIl0sImZnciI6ImE2YTYyOTdjMjYyNTU3NDY3MjFjMTNjMThlN2JmZDNiMzYzOGQ2MThmYWQxMzYxZWJiOWJhMDMzZjIyODgyNTkiLCJrZXkiOiJUdUJZLVpjQjZTaEE2alBmR041MDpISzQ3MWJjdlFRQ0dsd011ZXM2RGZnIn0=

kubectl exec -it kibana-5459c858d9-m4c66 -- bin/kibana-verification-code
